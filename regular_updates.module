<?php

/**
 * @file
 * Sends updates to an external target about site-events.
 */

define('REGULAR_UPDATES_SETTINGS_VARNAME', 'regular_updates_settings');

define('REGULAR_UPDATES_TEMPLATE_DEFAULT', 'regular_template.tpl.php');

// The structure of the settings array.
define('REGULAR_UPDATES_SETTINGS', serialize([
  'target_api_enabled' => 0,
  'target_api_urls' => [],

  'target_email_enabled' => 0,
  'target_email_emails' => [],
  'target_email_custom_template_enabled' => 1,
  'target_email_custom_template' => REGULAR_UPDATES_TEMPLATE_DEFAULT,

  'enabled_events' => [
    'nodes' => 1,
    'users' => 1,
    'forum' => 1
  ],

  'interval' => 'daily'
]));

define('REGULAR_UPDATES_EVENT_OPTIONS', serialize([
'nodes' => t('Nodes'),
'users' => t('Users'),
'forum' => t('Forum'),
]));

define('REGULAR_UPDATES_INTERVAL_OPTIONS', serialize([
'bi-daily' => t('Twice a day'),
'daily' => t('Daily'),
'weekly' => t('Weekly'),
'bi-monthly' => t('Every two weeks'),
'monthly' => t('Monthly')
]));


/**
 * Implements hook_admin().
 * Configuration page for the module.
 */
function regular_updates_admin() {
  $form = array();

  $default_values = unserialize(REGULAR_UPDATES_SETTINGS);

  $current_values = variable_get(REGULAR_UPDATES_SETTINGS_VARNAME);

  if (empty($current_values)) {
    $current_values = $default_values;
  }
  else {
    $current_values = json_decode($current_values, TRUE);
  }

  // todo
  $templates_detected = [
    REGULAR_UPDATES_TEMPLATE_DEFAULT => 'Default Template File'
  ];

  /*
   * Target: API
   */
  $form['target_api_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable'),
    '#prefix' => '<h2>' . t('Target settings: API') . '</h2>',
    '#default_value' => $current_values['target_api_enabled'],
    '#options' => [TRUE => 'Enabled', FALSE => 'Disabled'], // this wont work - fix it.
  );

  $form['target_api_urls'] = array(
    '#type' => 'textarea',
    '#default_value' => $current_values['target_api_urls'],
    '#title' => t('API URLs (comma seperated)'),
  );

  /*
   * Target: Email
   */
  $form['target_email_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable'),
    '#prefix' => '<h2>' . t('Target settings: Email') . '</h2>',
    '#default_value' => $current_values['target_email_enabled'],
    '#options' => ['Enabled' => TRUE, 'Disabled' => FALSE], // this wont work - fix it.
  );

  $form['target_email_emails'] = array(
    '#type' => 'textarea',
    '#default_value' => $current_values['target_email_emails'],
    '#title' => t('Emails (comma seperated)'),
  );

  /*
   * Target: Templates
   */
  $form['target_email_custom_template_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable email custom template'),
    '#default_value' => $current_values['target_email_custom_template_enabled'],
    '#options' => ['Enabled' => TRUE, 'Disabled' => FALSE], // this wont work - fix it.
  );

  $form['target_email_custom_template'] = array(
    '#type' => 'select',
    '#required' => TRUE,
    '#title' => t('Custom template file to use, if enabled above'),
    '#default_value' => $current_values['target_email_custom_template'],
    '#options' => $templates_detected
  );

  /*
   * Target: Events
   */
  $form['events_enable'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Enable events'),
    '#default_value' => $current_values['enabled_events'],
    '#options' => unserialize(REGULAR_UPDATES_EVENT_OPTIONS)
  );

  /*
   * Target: Intervals
   */
  $form['interval'] = array(
    '#type' => 'select',
    '#title' => t('Select interval'),
    '#required' => TRUE,
    '#default_value' => $current_values['interval'],
    '#options' => unserialize(REGULAR_UPDATES_INTERVAL_OPTIONS)
  );

  return system_settings_form($form);
}

/**
 * Implements hook_menu().
 * Link for configuration pages.
 */
function regular_updates_menu() {
  $items = array();

  $items['admin/settings/regular_updates'] = array(
    'title' => t('Regular Updates'),
    'description' => '',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('regular_updates_admin'),
    'access arguments' => array('administer regular updates settings'),
    'type' => MENU_NORMAL_ITEM,
   );

  return $items;
}

/**
 * Implements hook_admin_validate().
 * Manipulating and checking data before it's sent.
 */
function regular_updates_admin_validate($form, &$form_state) {
  $regular_updates_values = [
    'target_api_enabled' => $form_state['values']['target_api_enable'],
    'target_email_enabled' => $form_state['values']['target_email_enable'],
    'target_api_urls' => $form_state['values']['target_api_urls'],
    'target_email_emails' => $form_state['values']['target_email_emails'],
    'target_email_custom_template_enabled' => $form_state['values']['target_email_custom_template_enable'],
    'enabled_events' => $form_state['values']['events_enable'],
    'target_email_custom_template' => $form_state['values']['target_email_custom_template'],
    'interval' => $form_state['values']['interval']
  ];

  variable_set(REGULAR_UPDATES_SETTINGS_VARNAME, json_encode($regular_updates_values));
}
